import React, { useState } from 'react';
import { Search, Trash2, Printer, Package } from 'lucide-react';

export default function IPathBulkOrderForm() {
  const [searchTerm, setSearchTerm] = useState('');
  const [orderItems, setOrderItems] = useState([]);
  const [discount, setDiscount] = useState(0);
  const [orderInfo, setOrderInfo] = useState({
    company: '',
    contact: '',
    tel: '',
    email: '',
    streetAddress: '',
    cityStateZip: '',
    shipToSame: true,
    shipCompany: '',
    shipAddress: '',
    shipCityStateZip: '',
    orderNumber: '',
    salesRep: '',
    terms: '',
    orderDate: new Date().toISOString().split('T')[0],
    startDate: '',
    completeDate: '',
    customerPO: '',
    shortName: ''
  });

  const products = [
    { id: 1, styleNumber: '2345-00-000', styleName: 'Dune Sandal', color: 'WHITE', group: 'SANDAL', price: 45.00 },
    { id: 2, styleNumber: '2345-1-00', styleName: 'CATS', color: 'BLACK SUEDE', group: 'CATS', price: 51.25 },
    { id: 3, styleNumber: '2345-10-01', styleName: 'Ace', color: 'White Leather', group: 'ACE', price: 51.25 },
    { id: 4, styleNumber: '2345-10-02', styleName: 'Ace', color: 'Highlighter Felt', group: 'ACE', price: 51.25 },
    { id: 5, styleNumber: '2345-1-02', styleName: 'CATS', color: 'RAW EDGE HEMP BLACK GREY', group: 'CATS', price: 51.25 },
    { id: 6, styleNumber: '2345-1-03', styleName: 'CATS', color: 'WHEAT LEATHER BROWN', group: 'CATS', price: 51.25 },
    { id: 7, styleNumber: '2345-1-05', styleName: 'Cats', color: 'Black Croc', group: 'CATS', price: 51.25 },
    { id: 8, styleNumber: '2345-1-10', styleName: 'CATS', color: 'BROWN SUEDE', group: 'CATS', price: 51.25 },
    { id: 9, styleNumber: '2345-11-00', styleName: 'Taylor', color: 'Black Wax Can', group: 'TAYLOR', price: 51.25 },
    { id: 10, styleNumber: '2345-11-01', styleName: 'Taylor', color: 'White Wax Can', group: 'TAYLOR', price: 51.25 },
    { id: 11, styleNumber: '2345-1-11', styleName: 'CATS', color: 'TAN SUEDE', group: 'CATS', price: 51.25 },
    { id: 12, styleNumber: '2345-12-00', styleName: 'Atlas', color: 'Black Suede', group: 'ATLAS', price: 51.25 },
    { id: 13, styleNumber: '2345-12-01', styleName: 'Atlas', color: 'White Wax Canv', group: 'ATLAS', price: 51.25 },
    { id: 14, styleNumber: '2345-1-22', styleName: 'CATS', color: 'NATURAL HEMP', group: 'CATS', price: 51.25 },
    { id: 15, styleNumber: '2345-2-00', styleName: 'CRICKET', color: 'BLACK SUEDE', group: 'CRICKET', price: 51.25 },
    { id: 16, styleNumber: '2345-2-02', styleName: 'CRICKET', color: 'Black Wax Hemp & Synth', group: 'CRICKET', price: 51.25 },
    { id: 17, styleNumber: '2345-2-03', styleName: 'CRICKET', color: 'WAXED HEMP GREEN', group: 'CRICKET', price: 51.25 },
    { id: 18, styleNumber: '2345-2-05', styleName: 'Cricket', color: 'Black Croc', group: 'CRICKET', price: 51.25 },
    { id: 19, styleNumber: '2345-2-100', styleName: 'IPATH X MAGENTA CRICKET', color: 'BLUE', group: 'CRICKET', price: 51.25 },
    { id: 20, styleNumber: '2345-2-22', styleName: 'CRICKET', color: 'NATURAL HEMP', group: 'CRICKET', price: 51.25 },
    { id: 21, styleNumber: '2345-3-00', styleName: 'GRASSHOPPER', color: 'BLACK LEATHER', group: 'GRASSHOPPER', price: 51.25 },
    { id: 22, styleNumber: '2345-3-01', styleName: 'GRASSHOPPER', color: 'WHITE LEATHER', group: 'GRASSHOPPER', price: 51.25 },
    { id: 23, styleNumber: '2345-3-02', styleName: 'GRASSHOPPER', color: 'Black denim BLACK/WHITE', group: 'GRASSHOPPER', price: 51.25 },
    { id: 24, styleNumber: '2345-3-03', styleName: 'GRASSHOPPER', color: 'Blue denim BLUE/WHITE', group: 'GRASSHOPPER', price: 51.25 },
    { id: 25, styleNumber: '2345-3-04', styleName: 'GRASSHOPPER', color: 'Cement/White', group: 'GRASSHOPPER', price: 51.25 },
    { id: 26, styleNumber: '2345-3-05', styleName: 'GRASSHOPPER', color: 'Black Croc', group: 'GRASSHOPPER', price: 51.25 },
    { id: 27, styleNumber: '2345-3-06', styleName: 'GRASSHOPPER', color: 'SUEDE BLACK GREY', group: 'GRASSHOPPER', price: 51.25 },
    { id: 28, styleNumber: '2345-3-07', styleName: 'GRASSHOPPER', color: 'SUEDE BROWN', group: 'GRASSHOPPER', price: 51.25 },
    { id: 29, styleNumber: '2345-3-08', styleName: 'GRASSHOPPER', color: 'SUEDE GREEN', group: 'GRASSHOPPER', price: 51.25 },
    { id: 30, styleNumber: '2345-3-09', styleName: 'GRASSHOPPER', color: 'WAXED CANVAS GREEN', group: 'GRASSHOPPER', price: 51.25 },
    { id: 31, styleNumber: '2345-3-10', styleName: 'GRASSHOPPER', color: 'WAXED SUEDE BLACK', group: 'GRASSHOPPER', price: 51.25 },
    { id: 32, styleNumber: '2345-3-11', styleName: 'GRASSHOPPER', color: 'White Leather', group: 'GRASSHOPPER', price: 51.25 },
    { id: 33, styleNumber: '2345-3-12', styleName: 'GRASSHOPPER', color: 'Suede BLACK/WHITE', group: 'GRASSHOPPER', price: 51.25 },
    { id: 34, styleNumber: '2345-3-13', styleName: 'GRASSHOPPER', color: 'BLACK RASTA', group: 'GRASSHOPPER', price: 51.25 },
    { id: 35, styleNumber: '2345-3-14', styleName: 'GRASSHOPPER', color: 'TAN HEMP', group: 'GRASSHOPPER', price: 51.25 },
    { id: 36, styleNumber: '2345-3-15', styleName: 'GRASSHOPPER', color: 'RASTA SUEDE', group: 'GRASSHOPPER', price: 51.25 },
    { id: 37, styleNumber: '2345-3-16', styleName: 'GRASSHOPPER', color: 'NAVY/WHITE', group: 'GRASSHOPPER', price: 51.25 },
    { id: 38, styleNumber: '2345-3-17', styleName: 'GRASSHOPPER', color: 'Suede BROWN', group: 'GRASSHOPPER', price: 51.25 },
    { id: 39, styleNumber: '2345-3-20', styleName: 'GRASSHOPPER', color: 'COGNAC LEATHER', group: 'GRASSHOPPER', price: 51.25 },
    { id: 40, styleNumber: '2345-4-00', styleName: '1985', color: 'BLACK SUEDE', group: '1985', price: 51.25 },
    { id: 41, styleNumber: '2345-4-01', styleName: 'Cricket', color: 'White & Black', group: 'CRICKET', price: 51.25 },
    { id: 42, styleNumber: '2345-4-02', styleName: '1985', color: 'SOFT SMOOTH LEATHER WHITE', group: '1985', price: 51.25 },
    { id: 43, styleNumber: '2345-4-03', styleName: '1985', color: 'SOFT SMOOTH LEATHER BLACK/WHITE', group: '1985', price: 51.25 },
    { id: 44, styleNumber: '2345-4-17', styleName: '1985', color: 'WHITE ACTION LEATHER', group: '1985', price: 51.25 },
    { id: 45, styleNumber: '2345-5-00', styleName: 'CATS HIGH SHEARLING', color: 'BLACK', group: 'CATS HIGH SHEARLING', price: 65.00 },
    { id: 46, styleNumber: '2345-5-10', styleName: 'CATS HIGH SHEARLING', color: 'BROWN', group: 'CATS HIGH SHEARLING', price: 65.00 },
    { id: 47, styleNumber: '2345-6-00', styleName: 'REED LOW', color: 'SHAGGY SUEDE BLACK', group: 'REED LOW', price: 51.25 },
    { id: 48, styleNumber: '2345-6-01', styleName: 'Reed Low', color: 'Natural hemp', group: 'REED LOW', price: 51.25 },
    { id: 49, styleNumber: '2345-6-02', styleName: 'Reed Low', color: 'Brown suede', group: 'REED LOW', price: 51.25 },
    { id: 50, styleNumber: '2345-6-03', styleName: 'REED LOW', color: 'WAXED HEMP BLUE/WHITE', group: 'REED LOW', price: 51.25 },
    { id: 51, styleNumber: '2345-6-04', styleName: 'REED LOW', color: 'CORK SUEDE RED', group: 'REED LOW', price: 51.25 },
    { id: 52, styleNumber: '2345-6-05', styleName: 'Reed Low', color: 'DARK Brown', group: 'REED LOW', price: 51.25 },
    { id: 53, styleNumber: '2345-7-01', styleName: 'Cats Low', color: 'Black Nubuck', group: 'CATS LOW', price: 51.25 },
    { id: 54, styleNumber: '2345-7-02', styleName: 'Cats Low', color: 'Blue Nubuck', group: 'CATS LOW', price: 51.25 },
    { id: 55, styleNumber: '2345-7-03', styleName: 'Cats Low', color: 'Olive hemp', group: 'CATS LOW', price: 51.25 },
    { id: 56, styleNumber: '2345-7-04', styleName: 'Cats Low', color: 'Grey hemp', group: 'CATS LOW', price: 51.25 },
    { id: 57, styleNumber: '2345-7-05', styleName: 'Cats Low', color: 'Natural hemp', group: 'CATS LOW', price: 51.25 },
    { id: 58, styleNumber: '2345-7-06', styleName: 'CATS LOW', color: 'WHEAT SUEDE BROWN', group: 'CATS LOW', price: 51.25 },
    { id: 59, styleNumber: '2345-7-07', styleName: 'Cats Low', color: 'Suede Two Tone BLACK/WHITE', group: 'CATS LOW', price: 51.25 },
    { id: 60, styleNumber: '2345-7-08', styleName: 'Cats Low', color: 'Suede Brown', group: 'CATS LOW', price: 51.25 },
    { id: 61, styleNumber: '2345-7-09', styleName: 'Cats Low', color: 'Suede BLUE', group: 'CATS LOW', price: 51.25 },
    { id: 62, styleNumber: '2345-7-10', styleName: 'Cats Low', color: 'Suede SAMBA', group: 'CATS LOW', price: 51.25 },
    { id: 63, styleNumber: '2345-7-100', styleName: 'IPATH X MAGENTA CATS LOW', color: 'BLUE', group: 'CATS LOW', price: 51.25 },
    { id: 64, styleNumber: '2345-8-00', styleName: 'POET', color: 'SUEDE BALLISTIC BLACK', group: 'POET', price: 51.25 },
    { id: 65, styleNumber: '2345-8-01', styleName: 'POET', color: 'SUEDE BALLISTIC WHITE', group: 'POET', price: 51.25 },
    { id: 66, styleNumber: '2345-8-03', styleName: 'POET', color: 'Brown Leather & Canvas', group: 'POET', price: 51.25 },
    { id: 67, styleNumber: '2345-9-01', styleName: 'DERELICT', color: 'SUEDE BALLISTIC WHITE', group: 'DERELICT', price: 51.25 },
    { id: 68, styleNumber: '2345-9-10', styleName: 'DERELICT', color: 'SUEDE BALLISTIC BROWN', group: 'DERELICT', price: 51.25 },
    { id: 69, styleNumber: 'IPATH0101', styleName: 'IPARIS TEE', color: 'CHARCOAL', group: 'APPAREL', price: 15.00 },
    { id: 70, styleNumber: 'IPATH0102', styleName: 'IPARIS TEE', color: 'NATURAL', group: 'APPAREL', price: 15.00 },
    { id: 71, styleNumber: 'IPATH020', styleName: 'T-SHIRT VINTAGE', color: 'NAVY', group: 'APPAREL', price: 15.00 },
    { id: 72, styleNumber: 'IPATH021', styleName: 'T-SHIRT VINTAGE', color: 'BROWN', group: 'APPAREL', price: 15.00 },
    { id: 73, styleNumber: 'IPATH022', styleName: 'T-SHIRT ICON', color: 'WHITE', group: 'APPAREL', price: 15.00 },
    { id: 74, styleNumber: 'IPATH023', styleName: 'T-SHIRT ICON', color: 'BLACK', group: 'APPAREL', price: 15.00 },
    { id: 75, styleNumber: 'IPATH024', styleName: 'SHELL LOGO TEE', color: 'MUSHROOM', group: 'APPAREL', price: 15.00 },
    { id: 76, styleNumber: 'IPATH025', styleName: 'T-SHIRT CLASSIC', color: 'GREEN', group: 'APPAREL', price: 15.00 },
    { id: 77, styleNumber: 'IPATH028', styleName: 'T-SHIRT WEED LEAF', color: 'CHARCOAL', group: 'APPAREL', price: 15.00 },
    { id: 78, styleNumber: 'IPATH029', styleName: 'T-SHIRT SMOKE', color: 'TAN', group: 'APPAREL', price: 15.00 },
    { id: 79, styleNumber: 'IPATH032', styleName: 'TRACK JACKET', color: 'BLACK', group: 'APPAREL', price: 45.00 },
    { id: 80, styleNumber: 'IPATH033', styleName: 'ZIP CLASSIC', color: 'CREME', group: 'APPAREL', price: 35.00 },
    { id: 81, styleNumber: 'IPATH034', styleName: 'ZIP CLASSIC', color: 'WASHED CHARCOAL', group: 'APPAREL', price: 35.00 },
    { id: 82, styleNumber: 'IPATH035', styleName: 'HOOD CLASSIC', color: 'BLACK', group: 'APPAREL', price: 35.00 },
    { id: 83, styleNumber: 'IPATH036', styleName: 'HOOD CLASSIC', color: 'MOCHA', group: 'APPAREL', price: 35.00 },
    { id: 84, styleNumber: 'IPATH037', styleName: 'TRUCKER HAT VINTAGE', color: 'DENIM', group: 'CAP', price: 12.00 },
    { id: 85, styleNumber: 'IPATH038', styleName: 'T-SHIRT WAX LOGO', color: 'BROWN', group: 'APPAREL', price: 15.00 },
    { id: 86, styleNumber: 'IPATH039W', styleName: 'T-SHIRT ICON', color: 'BLACK', group: 'WOMENS APPAREL', price: 15.00 },
    { id: 87, styleNumber: 'IPATH040', styleName: 'CAP RASTA', color: 'BLACK', group: 'CAP', price: 12.00 },
    { id: 88, styleNumber: 'IPATH041', styleName: 'SNAPBACK ICON', color: 'BLACK', group: 'CAP', price: 12.00 },
    { id: 89, styleNumber: 'IPATH042', styleName: 'SNAPBACK ICON', color: 'GREEN', group: 'CAP', price: 12.00 },
    { id: 90, styleNumber: 'IPATH043', styleName: 'Icon Snapback', color: 'ALUMINUM', group: 'CAP', price: 12.00 },
    { id: 91, styleNumber: 'IPATH044', styleName: 'Icon Snapback', color: 'WHITE', group: 'CAP', price: 12.00 },
    { id: 92, styleNumber: 'IPATH045', styleName: 'Icon Snapback', color: 'SAMBA', group: 'CAP', price: 12.00 },
    { id: 93, styleNumber: 'IPATH046', styleName: 'Beanie Knit Striped', color: 'GREY', group: 'CAP', price: 10.00 },
    { id: 94, styleNumber: 'IPATH047', styleName: 'Beanie Knit Black', color: 'BLACK', group: 'CAP', price: 10.00 },
    { id: 95, styleNumber: 'IPATH048', styleName: 'BLK SNAPBACK RASTA', color: 'BLACK RASTA', group: 'CAP', price: 12.00 },
    { id: 96, styleNumber: 'IPATH049', styleName: 'Black Snapback & White', color: 'BLACK/WHITE', group: 'CAP', price: 12.00 },
    { id: 97, styleNumber: 'IPATH0501', styleName: 'IPARIS HOODIE', color: 'CHARCOAL', group: 'APPAREL', price: 35.00 },
    { id: 98, styleNumber: 'IPATH052', styleName: 'HOOD CLASSIC', color: 'IVORY', group: 'APPAREL', price: 35.00 },
    { id: 99, styleNumber: 'IPATH053', styleName: 'HOOD CLASSIC', color: 'BLACK', group: 'APPAREL', price: 35.00 },
    { id: 100, styleNumber: 'IPATH054', styleName: 'HOOD CLASSIC', color: 'CHARCOAL', group: 'APPAREL', price: 35.00 },
    { id: 101, styleNumber: 'IPATH1-13', styleName: 'REED MID VULK', color: 'BLACK RASTA', group: 'REED MID VULK', price: 51.25 },
    { id: 102, styleNumber: 'IPATH1-15', styleName: 'REED MID VULK', color: 'RASTA', group: 'REED MID VULK', price: 51.25 },
    { id: 103, styleNumber: 'IPATH1-16', styleName: 'Reed Mid', color: 'Green/Yellow', group: 'REED MID VULK', price: 51.25 },
    { id: 104, styleNumber: 'IPATH1--17', styleName: 'Reed Mid', color: 'Black Croc Print', group: 'REED MID VULK', price: 51.25 },
    { id: 105, styleNumber: 'IPATH1-18', styleName: 'REED MID', color: 'SOFT LEATHER BLACK', group: 'REED MID VULK', price: 51.25 },
    { id: 106, styleNumber: 'IPATH1-19', styleName: 'REED MID', color: 'CORK SOFT BLACK', group: 'REED MID VULK', price: 51.25 },
    { id: 107, styleNumber: 'IPATH-R1', styleName: 'BLACK ALUMINUM SHREDDER', color: 'BLACK', group: 'APPAREL', price: 25.00 },
    { id: 108, styleNumber: 'IPATH-R2', styleName: 'RASTA ALUMINUM SHREDDER', color: 'RASTA', group: 'APPAREL', price: 25.00 },
    { id: 109, styleNumber: 'IPATH-S', styleName: 'IPATH STICKER', color: 'MULTI', group: 'ACCESSORIES', price: 1.00 }
  ];

  const sizes = ['5', '6', '6.5', '7', '7.5', '8', '8.5', '9', '9.5', '10', '10.5', '11', '11.5', '12', '13', '14'];

  const filteredProducts = products.filter(p =>
    p.styleNumber.toLowerCase().includes(searchTerm.toLowerCase()) ||
    p.styleName.toLowerCase().includes(searchTerm.toLowerCase()) ||
    p.color.toLowerCase().includes(searchTerm.toLowerCase())
  );

  const handleAddProduct = (product) => {
    const exists = orderItems.find(item => item.id === product.id);
    if (!exists) {
      setOrderItems([...orderItems, { ...product, quantities: {} }]);
    }
  };

  const handleUpdateQuantity = (productId, size, value) => {
    const newItems = orderItems.map(item => {
      if (item.id === productId) {
        const newQuantities = { ...item.quantities };
        newQuantities[size] = parseInt(value) || 0;
        return { ...item, quantities: newQuantities };
      }
      return item;
    });
    setOrderItems(newItems);
  };

  const handleRemoveProduct = (productId) => {
    setOrderItems(orderItems.filter(item => item.id !== productId));
  };

  const handlePrint = () => {
    window.print();
  };

  const getTotal = (item) => {
    return Object.values(item.quantities).reduce((sum, qty) => sum + qty, 0);
  };

  const getTotalPrice = () => {
    const subtotal = orderItems.reduce((sum, item) => sum + getTotal(item) * item.price, 0);
    return subtotal * (1 - discount / 100);
  };

  const getSubtotal = () => {
    return orderItems.reduce((sum, item) => sum + getTotal(item) * item.price, 0);
  };

  const getDiscountAmount = () => {
    return getSubtotal() * (discount / 100);
  };

  const getItemPrice = (item) => {
    return getTotal(item) * item.price * (1 - discount / 100);
  };

  const getTotalUnits = () => {
    return orderItems.reduce((sum, item) => sum + getTotal(item), 0);
  };

  const ShoeSVG = ({ className = '', delay = 0 }) => (
    <svg viewBox="0 0 64 64" className={className} style={{ animationDelay: `${delay}s` }}>
      <path
        d="M8 32c0-2 2-4 4-4h8c2 0 4 2 4 4v4c0 2-2 4-4 4h-8c-2 0-4-2-4-4v-4zm16-8h24c4 0 8 4 8 8v8c0 4-4 8-8 8H24c-2 0-4-2-4-4v-12c0-2 2-4 4-4z"
        fill="currentColor"
        opacity="0.7"
      />
      <ellipse cx="32" cy="36" rx="16" ry="4" fill="currentColor" opacity="0.3" />
    </svg>
  );

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-4">
      <style>
        {`
          @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(5deg); }
          }
          @keyframes slideIn {
            from { opacity: 0; transform: translateX(-20px); }
            to { opacity: 1; transform: translateX(0); }
          }
          @keyframes pulse {
            0%, 100% { opacity: 0.4; }
            50% { opacity: 0.8; }
          }
          .float-shoe {
            animation: float 4s ease-in-out infinite;
          }
          .slide-in {
            animation: slideIn 0.5s ease-out;
          }
          .pulse-bg {
            animation: pulse 3s ease-in-out infinite;
          }
        `}
      </style>

      <div className="max-w-7xl mx-auto bg-white shadow-2xl rounded-lg overflow-hidden">
        <div className="relative bg-gradient-to-r from-gray-900 via-gray-800 to-black text-white p-8 overflow-hidden">
          <div className="absolute top-4 right-4 text-gray-600 opacity-20">
            <ShoeSVG className="w-32 h-32 float-shoe pulse-bg" delay={0} />
          </div>
          <div className="absolute bottom-4 right-20 text-gray-600 opacity-20">
            <ShoeSVG className="w-24 h-24 float-shoe pulse-bg" delay={1.5} />
          </div>
          <div className="absolute top-1/2 right-1/3 text-gray-600 opacity-20">
            <ShoeSVG className="w-20 h-20 float-shoe pulse-bg" delay={3} />
          </div>
          
          <div className="relative z-10 flex justify-between items-start">
            <div className="slide-in">
              <div className="flex items-center gap-4 mb-3">
                <div className="bg-white px-8 py-4 rounded-lg shadow-lg transform hover:scale-105 transition-transform">
                  <h1 className="text-5xl font-black tracking-wider text-black" style={{ fontFamily: 'Arial Black, sans-serif' }}>
                    IPATH
                  </h1>
                </div>
              </div>
              <p className="text-2xl font-light mb-2">FOOTWEAR & APPAREL</p>
              <div className="text-sm text-blue-400 inline-flex items-center gap-2">
                WWW.IPATH.COM
              </div>
            </div>
            <div className="text-right slide-in" style={{ animationDelay: '0.2s' }}>
              <p className="font-bold text-2xl mb-2 bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
                BULK ORDER FORM
              </p>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-2 gap-6 p-6 border-b-2 border-gray-200">
          <div className="slide-in" style={{ animationDelay: '0.3s' }}>
            <h3 className="font-bold text-lg mb-3 bg-gradient-to-r from-gray-800 to-gray-600 text-white p-3 rounded">BILL TO:</h3>
            <div className="space-y-2">
              <div>
                <label className="text-xs font-bold text-gray-700">COMPANY:</label>
                <input type="text" className="w-full border-b-2 border-gray-300 p-2 focus:border-blue-500 transition-colors outline-none" value={orderInfo.company} onChange={(e) => setOrderInfo({...orderInfo, company: e.target.value})} />
              </div>
              <div>
                <label className="text-xs font-bold text-gray-700">CONTACT:</label>
                <input type="text" className="w-full border-b-2 border-gray-300 p-2 focus:border-blue-500 transition-colors outline-none" value={orderInfo.contact} onChange={(e) => setOrderInfo({...orderInfo, contact: e.target.value})} />
              </div>
              <div className="grid grid-cols-2 gap-2">
                <div>
                  <label className="text-xs font-bold text-gray-700">TEL:</label>
                  <input type="tel" className="w-full border-b-2 border-gray-300 p-2 focus:border-blue-500 transition-colors outline-none" value={orderInfo.tel} onChange={(e) => setOrderInfo({...orderInfo, tel: e.target.value})} />
                </div>
                <div>
                  <label className="text-xs font-bold text-gray-700">EMAIL:</label>
                  <input type="email" className="w-full border-b-2 border-gray-300 p-2 focus:border-blue-500 transition-colors outline-none" value={orderInfo.email} onChange={(e) => setOrderInfo({...orderInfo, email: e.target.value})} />
                </div>
              </div>
              <div>
                <label className="text-xs font-bold text-gray-700">STREET ADDRESS:</label>
                <input type="text" className="w-full border-b-2 border-gray-300 p-2 focus:border-blue-500 transition-colors outline-none" value={orderInfo.streetAddress} onChange={(e) => setOrderInfo({...orderInfo, streetAddress: e.target.value})} />
              </div>
              <div>
                <label className="text-xs font-bold text-gray-700">CITY/STATE/ZIP:</label>
                <input type="text" className="w-full border-b-2 border-gray-300 p-2 focus:border-blue-500 transition-colors outline-none" placeholder="Los Angeles, CA 90063" value={orderInfo.cityStateZip} onChange={(e) => setOrderInfo({...orderInfo, cityStateZip: e.target.value})} />
              </div>
              
              <div className="pt-4 border-t-2 border-gray-200 mt-4">
                <label className="text-xs font-bold text-gray-700 block mb-2">DISCOUNT %:</label>
                <div className="flex items-center gap-2">
                  <input 
                    type="number" 
                    min="0" 
                    max="100" 
                    step="0.1"
                    className="w-24 border-2 border-green-500 p-2 rounded focus:border-green-600 transition-colors outline-none text-center font-bold text-green-700" 
                    value={discount} 
                    onChange={(e) => setDiscount(Math.min(100, Math.max(0, parseFloat(e.target.value) || 0)))} 
                  />
                  <span className="text-green-700 font-bold text-xl">%</span>
                  {discount > 0 && (
                    <span className="text-sm text-green-600 font-semibold ml-2">
                      Save ${getDiscountAmount().toFixed(2)}
                    </span>
                  )}
                </div>
              </div>
            </div>
          </div>

          <div className="slide-in" style={{ animationDelay: '0.4s' }}>
            <h3 className="font-bold text-lg mb-3 bg-gradient-to-r from-gray-800 to-gray-600 text-white p-3 rounded">SHIP TO:</h3>
            <div className="mb-3">
              <label className="flex items-center text-sm hover:text-blue-600 cursor-pointer transition-colors">
                <input type="checkbox" checked={orderInfo.shipToSame} onChange={(e) => setOrderInfo({...orderInfo, shipToSame: e.target.checked})} className="mr-2 w-4 h-4" />
                Same as Bill To
              </label>
            </div>
            {!orderInfo.shipToSame && (
              <div className="space-y-2 mb-4">
                <div>
                  <label className="text-xs font-bold text-gray-700">COMPANY:</label>
                  <input type="text" className="w-full border-b-2 border-gray-300 p-2 focus:border-blue-500 transition-colors outline-none" value={orderInfo.shipCompany} onChange={(e) => setOrderInfo({...orderInfo, shipCompany: e.target.value})} />
                </div>
                <div>
                  <label className="text-xs font-bold text-gray-700">ADDRESS:</label>
                  <input type="text" className="w-full border-b-2 border-gray-300 p-2 focus:border-blue-500 transition-colors outline-none" value={orderInfo.shipAddress} onChange={(e) => setOrderInfo({...orderInfo, shipAddress: e.target.value})} />
                </div>
              </div>
            )}
            
            <div className="space-y-2">
              <div className="grid grid-cols-2 gap-2">
                <div>
                  <label className="text-xs font-bold text-gray-700">ORDER NUMBER:</label>
                  <input type="text" className="w-full border-b-2 border-gray-300 p-2 focus:border-blue-500 transition-colors outline-none" value={orderInfo.orderNumber} onChange={(e) => setOrderInfo({...orderInfo, orderNumber: e.target.value})} />
                </div>
                <div>
                  <label className="text-xs font-bold text-gray-700">SALES REP:</label>
                  <input type="text" className="w-full border-b-2 border-gray-300 p-2 focus:border-blue-500 transition-colors outline-none" value={orderInfo.salesRep} onChange={(e) => setOrderInfo({...orderInfo, salesRep: e.target.value})} />
                </div>
              </div>
              <div className="grid grid-cols-2 gap-2">
                <div>
                  <label className="text-xs font-bold text-gray-700">TERMS:</label>
                  <input type="text" className="w-full border-b-2 border-gray-300 p-2 focus:border-blue-500 transition-colors outline-none" value={orderInfo.terms} onChange={(e) => setOrderInfo({...orderInfo, terms: e.target.value})} />
                </div>
                <div>
                  <label className="text-xs font-bold text-gray-700">ORDER DATE:</label>
                  <input type="date" className="w-full border-b-2 border-gray-300 p-2 focus:border-blue-500 transition-colors outline-none" value={orderInfo.orderDate} onChange={(e) => setOrderInfo({...orderInfo, orderDate: e.target.value})} />
                </div>
              </div>
              <div className="grid grid-cols-2 gap-2">
                <div>
                  <label className="text-xs font-bold text-gray-700">CUSTOMER P.O.:</label>
                  <input type="text" className="w-full border-b-2 border-gray-300 p-2 focus:border-blue-500 transition-colors outline-none" value={orderInfo.customerPO} onChange={(e) => setOrderInfo({...orderInfo, customerPO: e.target.value})} />
                </div>
                <div>
                  <label className="text-xs font-bold text-gray-700">SHORT NAME:</label>
                  <input type="text" className="w-full border-b-2 border-gray-300 p-2 focus:border-blue-500 transition-colors outline-none" value={orderInfo.shortName} onChange={(e) => setOrderInfo({...orderInfo, shortName: e.target.value})} />
                </div>
              </div>
            </div>
          </div>
        </div>

        <div className="p-6 bg-gradient-to-br from-gray-100 to-gray-50 border-b-2">
          <h3 className="font-bold text-lg mb-3 text-gray-800">SEARCH PRODUCTS</h3>
          <div className="relative mb-4">
            <Search className="absolute left-3 top-3 h-5 w-5 text-gray-400" />
            <input
              type="text"
              placeholder="Search by style number, name, or color..."
              className="w-full pl-10 pr-4 py-3 border-2 border-gray-300 rounded-lg focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all outline-none shadow-sm"
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
            />
          </div>

          <div className="bg-white rounded-lg shadow-lg max-h-80 overflow-y-auto border-2 border-gray-200">
            <div className="p-2">
              {filteredProducts.length > 0 ? (
                <div className="space-y-1">
                  {filteredProducts.map((product) => (
                    <div 
                      key={product.id} 
                      className="flex justify-between items-center p-3 hover:bg-gradient-to-r hover:from-blue-50 hover:to-purple-50 rounded transition-all border-b border-gray-100 last:border-0"
                    >
                      <div className="flex items-center gap-3">
                        <ShoeSVG className="w-8 h-8 text-gray-400" />
                        <div>
                          <div className="font-bold text-sm text-gray-800">{product.styleNumber}</div>
                          <div className="text-sm text-gray-600">{product.styleName} - {product.color}</div>
                          <div className="text-xs text-blue-600 font-semibold">${product.price.toFixed(2)}</div>
                        </div>
                      </div>
                      <button 
                        onClick={() => handleAddProduct(product)} 
                        className="bg-gradient-to-r from-blue-500 to-blue-600 text-white px-4 py-2 rounded-lg hover:from-blue-600 hover:to-blue-700 transition-all shadow-md hover:shadow-lg transform hover:scale-105"
                      >
                        Add
                      </button>
                    </div>
                  ))}
                </div>
              ) : (
                <div className="text-center py-8 text-gray-500">No products found</div>
              )}
            </div>
          </div>
        </div>

        {orderItems.length > 0 ? (
          <div className="overflow-x-auto">
            <table className="w-full border-collapse text-xs">
              <thead>
                <tr className="bg-gradient-to-r from-gray-900 to-gray-800 text-white">
                  <th className="border border-gray-700 p-2">Style</th>
                  <th className="border border-gray-700 p-2">Name</th>
                  <th className="border border-gray-700 p-2">Color</th>
                  {sizes.map(size => (
                    <th key={size} className="border border-gray-700 p-1 w-12">{size}</th>
                  ))}
                  <th className="border border-gray-700 p-2">Total</th>
                  <th className="border border-gray-700 p-2">Price</th>
                  <th className="border border-gray-700 p-2">Remove</th>
                </tr>
              </thead>
              <tbody>
                {orderItems.map(item => (
                  <tr key={item.id} className="hover:bg-blue-50 transition-colors">
                    <td className="border p-2 font-medium">{item.styleNumber}</td>
                    <td className="border p-2">{item.styleName}</td>
                    <td className="border p-2 text-gray-600">{item.color}</td>
                    {sizes.map(size => (
                      <td key={size} className="border p-1 bg-gray-50">
                        <input 
                          type="number" 
                          min="0" 
                          placeholder="0"
                          className="w-full text-center border-2 border-blue-300 p-2 focus:bg-yellow-50 focus:border-blue-600 transition-colors outline-none rounded bg-white text-black font-bold text-base shadow-sm hover:border-blue-400" 
                          value={item.quantities[size] || ''} 
                          onChange={(e) => handleUpdateQuantity(item.id, size, e.target.value)} 
                        />
                      </td>
                    ))}
                    <td className="border p-2 text-center font-bold text-blue-600">{getTotal(item)}</td>
                    <td className="border p-2 text-right font-semibold">
                      {discount > 0 && (
                        <div className="text-xs text-gray-400 line-through">${(getTotal(item) * item.price).toFixed(2)}</div>
                      )}
                      <div className={discount > 0 ? 'text-green-600' : ''}>
                        ${getItemPrice(item).toFixed(2)}
                      </div>
                    </td>
                    <td className="border p-2 text-center">
                      <button 
                        onClick={() => handleRemoveProduct(item.id)} 
                        className="text-red-600 hover:text-red-800 hover:bg-red-50 p-2 rounded transition-all"
                      >
                        <Trash2 className="h-4 w-4" />
                      </button>
                    </td>
                  </tr>
                ))}
              </tbody>
              <tfoot>
                <tr className="bg-gray-50">
                  <td colSpan={sizes.length + 3} className="border p-2 text-right font-semibold">SUBTOTAL:</td>
                  <td className="border p-2 text-center text-blue-600 font-bold">{getTotalUnits()}</td>
                  <td className="border p-2 text-right font-semibold">${getSubtotal().toFixed(2)}</td>
                  <td className="border"></td>
                </tr>
                {discount > 0 && (
                  <tr className="bg-green-50">
                    <td colSpan={sizes.length + 3} className="border p-2 text-right font-semibold text-green-700">
                      DISCOUNT ({discount}%):
                    </td>
                    <td className="border p-2 text-center"></td>
                    <td className="border p-2 text-right font-semibold text-green-700">-${getDiscountAmount().toFixed(2)}</td>
                    <td className="border"></td>
                  </tr>
                )}
                <tr className="bg-gradient-to-r from-gray-200 to-gray-100 font-bold">
                  <td colSpan={sizes.length + 3} className="border p-2 text-right text-lg">TOTAL:</td>
                  <td className="border p-2 text-center text-blue-600 text-lg">{getTotalUnits()}</td>
                  <td className="border p-2 text-right text-green-600 text-lg">${getTotalPrice().toFixed(2)}</td>
                  <td className="border"></td>
                </tr>
              </tfoot>
            </table>
          </div>
        ) : (
          <div className="p-12 text-center text-gray-500">
            <Package className="h-16 w-16 mx-auto mb-4 text-gray-300" />
            <p className="text-lg font-medium mb-2">No products added</p>
            <p className="text-sm">Search and add products above</p>
          </div>
        )}

        <div className="p-6 bg-gradient-to-r from-gray-100 to-gray-50 flex justify-between items-center">
          <div>
            <p className="font-bold text-gray-700">Total Units: <span className="text-blue-600 text-xl">{getTotalUnits()}</span></p>
            {discount > 0 && (
              <>
                <p className="text-sm text-gray-600">Subtotal: <span className="line-through">${getSubtotal().toFixed(2)}</span></p>
                <p className="text-sm text-green-600 font-semibold">Discount ({discount}%): -${getDiscountAmount().toFixed(2)}</p>
              </>
            )}
            <p className="font-bold text-2xl text-green-600">${getTotalPrice().toFixed(2)}</p>
          </div>
          <button 
            onClick={handlePrint} 
            className="bg-gradient-to-r from-blue-500 to-purple-600 text-white px-6 py-3 rounded-lg hover:from-blue-600 hover:to-purple-700 transition-all shadow-lg hover:shadow-xl flex items-center gap-2 transform hover:scale-105"
          >
            <Printer className="h-5 w-5" />
            Print Order
          </button>
        </div>
      </div>
    </div>
  );
}